{"version":3,"sources":["logo.svg","utils/words.js","hooks/useKeyPress.js","Popup.js","PopBtn.js","Popup2.js","App.js","reportWebVitals.js","index.js"],"names":["generate","count","Array","fill","map","_","faker","random","word","join","useKeyPress","callback","useState","keyPressed","setKeyPressed","useEffect","downHandler","key","length","upHandler","window","addEventListener","removeEventListener","Popup","className","this","props","text","onClick","closePopup","React","Component","App","initialWords","leftPadding","setLeftPadding","outgoingChars","setOutgoingChars","charAt","currentChar","setCurrentChar","substr","incomingChars","setIncomingChars","currentCharCorrect","setCurrentCharCorrect","randomVar","setRandomVar","updatedOutgoingChars","updatedIncomingChars","substring","split","src","logo","alt","slice","href","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c60dc86d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import faker from 'faker';\r\n\r\nexport const generate = (count = 10) => {\r\n    return new Array(count)\r\n      .fill()\r\n      .map(_ => faker.random.word())\r\n      .join(' ');\r\n};","import { useState, useEffect } from 'react';\r\n\r\n//1\r\nconst useKeyPress = callback => {\r\n  //2\r\n  const [keyPressed, setKeyPressed] = useState();\r\n  //3\r\n  useEffect(() => {\r\n    //4\r\n    const downHandler = ({ key }) => {\r\n      if (keyPressed !== key && key.length === 1) {\r\n        setKeyPressed(key);\r\n        callback && callback(key);\r\n      }\r\n    };\r\n    //5\r\n    const upHandler = () => {\r\n      setKeyPressed(null);\r\n    };\r\n\r\n    //6\r\n    window.addEventListener('keydown', downHandler);\r\n    window.addEventListener('keyup', upHandler);\r\n\r\n    return () => {\r\n      //7\r\n      window.removeEventListener('keydown', downHandler);\r\n      window.removeEventListener('keyup', upHandler);\r\n    };\r\n  });\r\n  //8\r\n  return keyPressed;\r\n};\r\n\r\nexport default useKeyPress;","import React from 'react';\nimport './Popup.css';\n\nclass Popup extends React.Component {\n  render() {\n    return (\n      <div className='popup'>\n        <div className='popup_inner'>\n          <h1>{this.props.text}</h1>\n          <button onClick={this.props.closePopup}>close me</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Popup;","import React from 'react';\nimport Popup from './Popup';\n\nclass PopBtn extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = { showPopup: false };\n    }\n  \n    togglePopup() {\n      this.setState({\n        showPopup: !this.state.showPopup\n      });\n    }\n  \n    render() {\n      return (\n        <div className=\"App\">\n        <div>\n          <h1> Simple Popup Example in React </h1>\n          <button onClick={this.togglePopup.bind(this)}> Click to launch popup </button>\n  \n          {this.state.showPopup ?\n            <Popup \n            text='Click \"Close Button\" to hide popup'\n            closePopup = {this.togglePopup.bind(this)}\n          />\n          : null\n          }\n        </div>\n      </div>\n      );\n    }\n  }\n\nexport default PopBtn;","import React from 'react';\nimport './Popup.css';\n\nfunction Popup(props) {\n    return (\n      <div className='popup'>\n        <div className='popup_inner'>\n          <h1>{props.text}</h1>\n          <button onClick={props.closePopup}>close me</button>\n        </div>\n      </div>\n    );\n}\n\nexport default Popup;","import logo from './logo.svg';\nimport './App.css';\nimport {generate} from './utils/words'\nimport useKeyPress from './hooks/useKeyPress'\nimport React, {useState} from 'react';\nimport PopBtn from './PopBtn';\nimport Popup from './Popup2';\n\n\nfunction App() {\n\n  const initialWords = generate()\n\n  const [leftPadding, setLeftPadding] = useState(\n    new Array(20).fill(' ').join(''),\n  );\n  const [outgoingChars, setOutgoingChars] = useState('');\n  const [currentChar, setCurrentChar] = useState(initialWords.charAt(0));\n  const [incomingChars, setIncomingChars] = useState(initialWords.substr(1))\n  const [currentCharCorrect, setCurrentCharCorrect] = useState(true);\n  const [randomVar, setRandomVar] = useState(false);\n\n  function toggleVar() {\n    setRandomVar(!randomVar);\n  }\n\n  useKeyPress(key => {\n\n    //1\n    setCurrentCharCorrect(true);\n\n    let updatedOutgoingChars = outgoingChars;\n    let updatedIncomingChars = incomingChars;\n    \n    //2\n    if (key === currentChar) {\n      //3\n      if (leftPadding.length > 0) {\n        setLeftPadding(leftPadding.substring(1));\n      }\n      //4\n      updatedOutgoingChars += currentChar;\n      setOutgoingChars(updatedOutgoingChars);\n      \n      //5      \n      setCurrentChar(incomingChars.charAt(0));\n      \n      //6\n      updatedIncomingChars = incomingChars.substring(1);\n      if (updatedIncomingChars.split(' ').length < 10) {\n        updatedIncomingChars +=' ' + generate();\n      }\n      setIncomingChars(updatedIncomingChars);\n    } else {\n      setRandomVar(true);\n      setCurrentCharCorrect(false);\n    }\n  });\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p className=\"Character\">\n          <span className=\"Character-out\">\n            {(leftPadding + outgoingChars).slice(-20)}\n          </span>\n          {currentCharCorrect ? <span className=\"Character-current\">{currentChar}</span> : <span className=\"Character-current-incorrect\">{currentChar}</span>}\n          <span>{incomingChars.substr(0, 20)}</span>\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n      {randomVar ? <Popup text='end me' closePopup={toggleVar}/> : null}\n    </div>\n  );\n}\n\nexport default App;\n\n\n// class App extends React.Component {\n//   constructor(props) {\n//     super(props);\n\n//     const initialWords = generate();\n\n//     this.state = {\n//       leftPadding: new Array(20).fill(' ').join(''),\n//       rightPadding: new Array(20).fill(' ').join(''),\n//       outgoingChars: '',\n//       setOutgoingChars: '',\n//       incomingChars: initialWords.charAt(0),\n//       setCurrentChar: initialWords.charAt(0),\n//       incomingChars: initialWords.substr(1),\n//       setIncomingChars: initialWords.substr(1)\n//     }\n//   } \n\n//   handleTyping() {\n//     useKeyPress(key => {\n//       //1\n//       let updatedOutgoingChars = outgoingChars;\n//       let updatedIncomingChars = incomingChars;\n      \n//       //2\n//       if (key === currentChar) {\n//         //3\n//         if (leftPadding.length > 0) {\n//           setLeftPadding(leftPadding.substring(1));\n//         }\n//         //4\n//         updatedOutgoingChars += currentChar;\n//         setOutgoingChars(updatedOutgoingChars);\n        \n//         //5      \n//         setCurrentChar(incomingChars.charAt(0));\n        \n//         //6\n//         updatedIncomingChars = incomingChars.substring(1);\n//         if (updatedIncomingChars.split(' ').length < 10) {\n//           updatedIncomingChars +=' ' + generate();\n//         }\n//         setIncomingChars(updatedIncomingChars);\n//       }\n//     });\n//   }\n\n\n//   render () {\n//     return (\n//           <div className=\"App\">\n//             <header className=\"App-header\">\n//               <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//               <p className=\"Character\">\n//                 <span className=\"Character-out\">\n//                   {(leftPadding + outgoingChars).slice(-20)}\n//                 </span>\n//                 <span className=\"Character-current\">{currentChar}</span>\n//                 <span>{incomingChars.substr(0, 20)}</span>\n//               </p>\n//               <a\n//                 className=\"App-link\"\n//                 href=\"https://reactjs.org\"\n//                 target=\"_blank\"\n//                 rel=\"noopener noreferrer\"\n//               >\n//                 Learn React\n//               </a>\n//             </header>\n//           </div>\n//         );\n//   }\n// }","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}