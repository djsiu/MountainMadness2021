{"version":3,"sources":["logo.svg","chickens/white-chick.png","utils/words.js","hooks/useKeyPress.js","Popup2.js","Components/DisplayComponent.js","Components/BtnComponent.js","Components/Timer.js","tabs/TypingPage/TypingPage.js","App.js","reportWebVitals.js","index.js"],"names":["generate","count","Array","fill","map","_","faker","random","word","join","useKeyPress","callback","useState","keyPressed","setKeyPressed","useEffect","downHandler","key","length","upHandler","window","addEventListener","removeEventListener","keyWords","Popup","props","index","Math","floor","className","onClick","closePopup","DisplayComponent","time","h","m","s","ms","BtnComponent","status","start","stop","reset","resume","Timer","setTime","interv","setInterv","setStatus","run","setInterval","updatedMs","updatedS","updatedM","updatedH","clearInterval","TypingPage","initialWords","leftPadding","setLeftPadding","outgoingChars","setOutgoingChars","charAt","currentChar","setCurrentChar","substr","incomingChars","setIncomingChars","currentCharCorrect","setCurrentCharCorrect","popupFlag","setPopupFlag","updatedOutgoingChars","updatedIncomingChars","substring","split","src","logo_chick","alt","slice","text","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8f50823f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/white-chick.e67caaa8.png\";","import faker from 'faker';\r\n\r\nexport const generate = (count = 10) => {\r\n    return new Array(count)\r\n      .fill()\r\n      .map(_ => faker.random.word())\r\n      .join(' ');\r\n};","import { useState, useEffect } from 'react';\r\n\r\n//1\r\nconst useKeyPress = callback => {\r\n  //2\r\n  const [keyPressed, setKeyPressed] = useState();\r\n  //3\r\n  useEffect(() => {\r\n    //4\r\n    const downHandler = ({ key }) => {\r\n      if (keyPressed !== key && key.length === 1) {\r\n        setKeyPressed(key);\r\n        callback && callback(key);\r\n      }\r\n    };\r\n    //5\r\n    const upHandler = () => {\r\n      setKeyPressed(null);\r\n    };\r\n\r\n    //6\r\n    window.addEventListener('keydown', downHandler);\r\n    window.addEventListener('keyup', upHandler);\r\n\r\n    return () => {\r\n      //7\r\n      window.removeEventListener('keydown', downHandler);\r\n      window.removeEventListener('keyup', upHandler);\r\n    };\r\n  });\r\n  //8\r\n  return keyPressed;\r\n};\r\n\r\nexport default useKeyPress;","import React from 'react';\nimport './Popup.css';\nimport useKeyPress from './hooks/useKeyPress';\n\nvar keyWords = [\n    \"cluck\",\n    \"bok\",\n    \"egg\",\n    \"chicken\",\n    \"hen\"\n];\n\nfunction Popup(props) {\n  useKeyPress(key => {\n    \n  });\n\n  var index;\n  index = Math.floor(Math.random()*keyWords.length);\n  //console.log(index);\n\n  return (\n    <div className='popup'>\n      <div className='popup_inner'>\n        <h1>{keyWords[index]}</h1>\n        <button onClick={props.closePopup}>close me</button>\n      </div>\n    </div>\n  );\n}\n\nexport default Popup;","import React from 'react';\n\nfunction DisplayComponent(props) {\n  const h = () => {\n     if(props.time.h === 0){\n       return '';\n     }else {\n       return <span>{(props.time.h >= 10)? props.time.h : \"0\"+ props.time.h}</span>;\n     }\n  }\n  return (\n    <div>\n       {h()}&nbsp;&nbsp;\n       <span>{(props.time.m >= 10)? props.time.m : \"0\"+ props.time.m}</span>&nbsp;:&nbsp;\n       <span>{(props.time.s >= 10)? props.time.s : \"0\"+ props.time.s}</span>&nbsp;:&nbsp;\n       <span>{(props.time.ms >= 10)? props.time.ms : \"0\"+ props.time.ms}</span>\n    </div>\n  );\n}\n\nexport default DisplayComponent;","import React from 'react';\n\nfunction BtnComponent(props) {\n  return (\n    <div>\n      {(props.status === 0)? \n        <button className=\"stopwatch-btn stopwatch-btn-gre\"\n        onClick={props.start}>Start</button> : \"\"\n      }\n\n      {(props.status === 1)? \n        <div>\n          <button className=\"stopwatch-btn stopwatch-btn-red\"\n                  onClick={props.stop}>Stop</button>\n          <button className=\"stopwatch-btn stopwatch-btn-yel\"\n                  onClick={props.reset}>Reset</button>\n        </div> : \"\"\n      }\n\n     {(props.status === 2)? \n        <div>\n          <button className=\"stopwatch-btn stopwatch-btn-gre\"\n                  onClick={props.resume}>Resume</button>\n          <button className=\"stopwatch-btn stopwatch-btn-yel\"\n                  onClick={props.reset}>Reset</button>\n        </div> : \"\"\n      }\n     \n    </div>\n  );\n}\n\nexport default BtnComponent;","import React, {useState} from 'react';\nimport DisplayComponent from './DisplayComponent';\nimport BtnComponent from './BtnComponent';\nimport './Timer.css';\n\nfunction Timer() {\n  const [time, setTime] = useState({ms:0, s:0, m:0, h:0});\n  const [interv, setInterv] = useState();\n  const [status, setStatus] = useState(0);\n  // Not started = 0\n  // started = 1\n  // stopped = 2\n\n  const start = () => {\n    run();\n    setStatus(1);\n    setInterv(setInterval(run, 10));\n  };\n\n  var updatedMs = time.ms, updatedS = time.s, updatedM = time.m, updatedH = time.h;\n\n  const run = () => {\n    if(updatedM === 60){\n      updatedH++;\n      updatedM = 0;\n    }\n    if(updatedS === 60){\n      updatedM++;\n      updatedS = 0;\n    }\n    if(updatedMs === 100){\n      updatedS++;\n      updatedMs = 0;\n    }\n    updatedMs++;\n    return setTime({ms:updatedMs, s:updatedS, m:updatedM, h:updatedH});\n  };\n\n  const stop = () => {\n    clearInterval(interv);\n    setStatus(2);\n  };\n\n  const reset = () => {\n    clearInterval(interv);\n    setStatus(0);\n    setTime({ms:0, s:0, m:0, h:0})\n  };\n\n  const resume = () => start();\n\n\n  return (\n    <div className=\"main-section\">\n     <div className=\"clock-holder\">\n          <div className=\"stopwatch\">\n               <DisplayComponent time={time}/>\n               <BtnComponent status={status} resume={resume} reset={reset} stop={stop} start={start}/>\n          </div>\n     </div>\n    </div>\n  );\n}\n\nexport default Timer;","//import logo from '../../logo.svg';\r\nimport logo_chick from '../../chickens/white-chick.png'\r\nimport './TypingPage.css';\r\nimport {generate} from '../../utils/words'\r\nimport useKeyPress from '../../hooks/useKeyPress'\r\nimport React, {useState} from 'react';\r\nimport Popup from '../../Popup2'\r\nimport Timer from '../../Components/Timer';\r\n\r\n\r\nfunction TypingPage() {\r\n\r\n  const initialWords = generate()\r\n\r\n  const [leftPadding, setLeftPadding] = useState(\r\n    new Array(20).fill(' ').join(''),\r\n  );\r\n\r\n  const [outgoingChars, setOutgoingChars] = useState('');\r\n  const [currentChar, setCurrentChar] = useState(initialWords.charAt(0));\r\n  const [incomingChars, setIncomingChars] = useState(initialWords.substr(1))\r\n  const [currentCharCorrect, setCurrentCharCorrect] = useState(true);\r\n  const [popupFlag, setPopupFlag] = useState(false);\r\n\r\n  function toggleVars() {\r\n    setPopupFlag(!popupFlag);\r\n  }\r\n\r\n  useKeyPress(key => {\r\n\r\n    //1\r\n    setCurrentCharCorrect(true);\r\n\r\n    let updatedOutgoingChars = outgoingChars;\r\n    let updatedIncomingChars = incomingChars;\r\n    \r\n    //2\r\n    if (key === currentChar && !popupFlag) {\r\n      //3\r\n      if (leftPadding.length > 0) {\r\n        setLeftPadding(leftPadding.substring(1));\r\n      }\r\n      //4\r\n      updatedOutgoingChars += currentChar;\r\n      setOutgoingChars(updatedOutgoingChars);\r\n      \r\n      //5      \r\n      setCurrentChar(incomingChars.charAt(0));\r\n      \r\n      //6\r\n      updatedIncomingChars = incomingChars.substring(1);\r\n      if (updatedIncomingChars.split(' ').length < 10) {\r\n        updatedIncomingChars +=' ' + generate();\r\n      }\r\n      setIncomingChars(updatedIncomingChars);\r\n    } else {\r\n      setPopupFlag(true);\r\n      setCurrentCharCorrect(false);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div className=\"TypingPage\">\r\n      <header className=\"TypingPage-header\">\r\n        <img src={logo_chick} className=\"TypingPage-logo\" alt=\"logo\" />\r\n        <p className=\"Character\">\r\n          <span className=\"Character-out\">\r\n            {(leftPadding + outgoingChars).slice(-20)}\r\n          </span>\r\n          {currentCharCorrect ? <span className=\"Character-current\">{currentChar}</span> : <span className=\"Character-current-incorrect\">{currentChar}</span>}\r\n          <span>{incomingChars.substr(0, 20)}</span>\r\n        </p>\r\n      </header>\r\n      {popupFlag ? <Popup text='end me' closePopup={toggleVars}/> : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TypingPage;","import logo from './logo.svg';\nimport './App.css';\n\nimport React from 'react';\n\nimport TypingPage from './tabs/TypingPage/TypingPage'\n\nimport Timer from './Components/Timer';\n\nfunction App() {\n  return (\n    <div>\n      <TypingPage/>\n      <Timer />\n    </div>\n  );\n}\n\nexport default App;\n\n\n// class App extends React.Component {\n//   constructor(props) {\n//     super(props);\n\n//     const initialWords = generate();\n\n//     this.state = {\n//       leftPadding: new Array(20).fill(' ').join(''),\n//       rightPadding: new Array(20).fill(' ').join(''),\n//       outgoingChars: '',\n//       setOutgoingChars: '',\n//       incomingChars: initialWords.charAt(0),\n//       setCurrentChar: initialWords.charAt(0),\n//       incomingChars: initialWords.substr(1),\n//       setIncomingChars: initialWords.substr(1)\n//     }\n//   } \n\n//   handleTyping() {\n//     useKeyPress(key => {\n//       //1\n//       let updatedOutgoingChars = outgoingChars;\n//       let updatedIncomingChars = incomingChars;\n      \n//       //2\n//       if (key === currentChar) {\n//         //3\n//         if (leftPadding.length > 0) {\n//           setLeftPadding(leftPadding.substring(1));\n//         }\n//         //4\n//         updatedOutgoingChars += currentChar;\n//         setOutgoingChars(updatedOutgoingChars);\n        \n//         //5      \n//         setCurrentChar(incomingChars.charAt(0));\n        \n//         //6\n//         updatedIncomingChars = incomingChars.substring(1);\n//         if (updatedIncomingChars.split(' ').length < 10) {\n//           updatedIncomingChars +=' ' + generate();\n//         }\n//         setIncomingChars(updatedIncomingChars);\n//       }\n//     });\n//   }\n\n\n//   render () {\n//     return (\n//           <div className=\"App\">\n//             <header className=\"App-header\">\n//               <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//               <p className=\"Character\">\n//                 <span className=\"Character-out\">\n//                   {(leftPadding + outgoingChars).slice(-20)}\n//                 </span>\n//                 <span className=\"Character-current\">{currentChar}</span>\n//                 <span>{incomingChars.substr(0, 20)}</span>\n//               </p>\n//               <a\n//                 className=\"App-link\"\n//                 href=\"https://reactjs.org\"\n//                 target=\"_blank\"\n//                 rel=\"noopener noreferrer\"\n//               >\n//                 Learn React\n//               </a>\n//             </header>\n//           </div>\n//         );\n//   }\n// }","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}